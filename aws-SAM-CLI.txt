AWS-SAM-CLI
https://aws.amazon.com/blogs/compute/implementing-safe-aws-lambda-deployments-with-aws-codedeploy/
https://github.com/aws-samples/aws-safe-lambda-deployments

sam init --profile python3.7
cd project-2
sam build
Package your application
sam package --output-template-file package.yml --s3-bucket sureshyerraguntla --region us-west-2 --profile aws-devops

deploy your application
sam deploy --template-file package.yml --stack-name my-date-time-app --capabilities CAPABILITY_IAM --region us-west-2 --stack-name aws-sam-geting-started --profile aws-devops

Microsoft Windows [Version 10.0.18363.1801]
(c) 2019 Microsoft Corporation. All rights reserved.

C:\Users\ysuresh>cd C:\Users\ysuresh\Desktop\abc\SAM-CLI

C:\Users\ysuresh\Desktop\abc\SAM-CLI>sam init --runtime python3.7
Which template source would you like to use?
        1 - AWS Quick Start Templates
        2 - Custom Template Location
Choice: 1
What package type would you like to use?
        1 - Zip (artifact is a zip uploaded to S3)
        2 - Image (artifact is an image uploaded to an ECR image repository)
Package type: 2

Which base image would you like to use?
        1 - amazon/nodejs14.x-base
        2 - amazon/nodejs12.x-base
        3 - amazon/nodejs10.x-base
        4 - amazon/python3.9-base
        5 - amazon/python3.8-base
        6 - amazon/python3.7-base
        7 - amazon/python3.6-base
        8 - amazon/python2.7-base
        9 - amazon/ruby2.7-base
        10 - amazon/ruby2.5-base
        11 - amazon/go1.x-base
        12 - amazon/java11-base
        13 - amazon/java8.al2-base
        14 - amazon/java8-base
        15 - amazon/dotnet5.0-base
        16 - amazon/dotnetcore3.1-base
        17 - amazon/dotnetcore2.1-base
Base image: 1

Project name [sam-app]: project-1

Cloning from https://github.com/aws/aws-sam-cli-app-templates

    -----------------------
    Generating application:
    -----------------------
    Name: project-1
    Base Image: amazon/nodejs14.x-base
    Architectures: x86_64
    Dependency Manager: npm
    Output Directory: .

    Next steps can be found in the README file at ./project-1/README.md


C:\Users\ysuresh\Desktop\abc\SAM-CLI>cd project-1

C:\Users\ysuresh\Desktop\abc\SAM-CLI\project-1>sam build
Building codeuri: C:\Users\ysuresh\Desktop\abc\SAM-CLI\project-1 runtime: None metadata: {'DockerTag': 'nodejs14.x-v1', 'DockerContext': 'C:\\Users\\ysuresh\\Desktop\\abc\\SAM-CLI\\project-1\\hello-world', 'Dockerfile': 'Dockerfile'} architecture: x86_64 functions: ['HelloWorldFunction']
cf313921f6fe: Pull complete                                                                                             9d52ad0a75fa: Pull complete                                                                                             Status: Downloaded newer image for public.ecr.aws/lambda/nodejs:14 ---> bc304990d2ab
Step 2/4 : COPY app.js package.json ./
 ---> 66a3731c9495 complete
Step 3/4 : RUN npm installe
 ---> Running in c94ca2bb2bba


sam package --output-template-file package.yml --s3-bucket sureshyerraguntla --region us-west-2 --profile aws-devops
  

sam deploy --template-file package.yml --stack-name my-date-time-app --capabilities CAPABILITY_IAM --region us-west-2 --stack-name aws-sam-geting-started --profile aws-devops
